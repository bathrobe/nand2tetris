// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //first three digits of address
    DMux8Way(in=load,sel=address[0..2],a=rl1,b=rl2,c=rl3,d=rl4,e=rl5,f=rl6,g=rl7,h=rl8);
    RAM8(in=in,load=rl1,address=address[3..5],out=r1);
    RAM8(in=in,load=rl2,address=address[3..5],out=r2);
    RAM8(in=in,load=rl3,address=address[3..5],out=r3);
    RAM8(in=in,load=rl4,address=address[3..5],out=r4);
    RAM8(in=in,load=rl5,address=address[3..5],out=r5);
    RAM8(in=in,load=rl6,address=address[3..5],out=r6);
    RAM8(in=in,load=rl7,address=address[3..5],out=r7);
    RAM8(in=in,load=rl8,address=address[3..5],out=r8);
    Mux8Way16(a=r1,b=r2,c=r3,d=r4,e=r5,f=r6,g=r7,h=r8,sel=address[0..2],out=out);
}
